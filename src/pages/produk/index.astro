---
import MainLayout from "../../layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import { withBase } from "../../utils/helpers";
import siteConfig from "../../site.config";

/** Pastikan dapat slug, apa pun bentuk entry-nya */
function deriveSlug(entry: { slug?: string; id: string; data: any }) {
  if (entry?.slug && typeof entry.slug === "string") return entry.slug;
  if (entry?.data?.slug && typeof entry.data.slug === "string") return entry.data.slug;
  const last = entry?.id?.split("/").pop() ?? "";
  return last.replace(/\.(md|mdx)$/i, "") || undefined;
}

/** URL gambar dari /public (atau http/https) */
function imgUrl(raw?: string) {
  if (!raw) return undefined;
  if (/^https?:\/\//i.test(raw)) return raw;
  return raw.startsWith("/") ? raw : `/${raw}`;
}

const raw = await getCollection("products");

/** sort (terbaru dulu), tapi HANYA yang slug-nya valid */
const products = raw
  .map((p) => ({ ...p, __slug: deriveSlug(p) }))
  .filter((p) => typeof p.__slug === "string" && p.__slug.length > 0)
  .sort((a, b) => {
    const da = a.data?.date ? new Date(a.data.date).getTime() : 0;
    const db = b.data?.date ? new Date(b.data.date).getTime() : 0;
    return db - da;
  });

const siteBase = Astro.site?.href ?? siteConfig.website ?? "https://twotworial.com";
const canonicalUrl = new URL("/produk", siteBase).href;
---

<MainLayout
  activePage="produk"
  pageTitle={`Produk | ${siteConfig.title}`}
  description="Katalog produk & jasa Twotworial."
  breadcrumbTitle="Produk"
  canonical={canonicalUrl}
>
  <section class="page-content">
    <h1 class="text-balance">Produk</h1>

    <input
      type="search"
      placeholder="Cari produk..."
      class="w-full rounded-3xl px-5 py-3 my-4"
      aria-label="Cari produk"
    />

    {products.length === 0 ? (
      <div class="rounded-3xl border px-5 py-8 text-center">
        Belum ada produk.
      </div>
    ) : (
      <div class="grid gap-6 md:grid-cols-2">
        {products.map((p) => {
          /* >>> hitung slug LANGSUNG di sini, super-defensif */
          const slug = p.__slug || deriveSlug(p);
          const href = withBase(`/produk/${slug}/`);

          /* gambar pertama (boleh string / object) */
          const first =
            Array.isArray(p.data?.images) && p.data.images.length
              ? (typeof p.data.images[0] === "string"
                  ? { src: p.data.images[0] as string, alt: p.data.title }
                  : (p.data.images[0] as { src: string; alt?: string }))
              : undefined;

          return (
            <article class="rounded-2xl border p-4">
              {first?.src && (
                <img
                  src={imgUrl(first.src)}
                  alt={first.alt || p.data.title}
                  class="mb-3 rounded-xl w-full h-auto object-cover"
                  loading="lazy"
                  decoding="async"
                />
              )}

              <h2 class="text-lg font-semibold mb-1">
                <a href={href} class="hover:underline">{p.data.title}</a>
              </h2>

              {p.data.excerpt && <p class="text-sm mb-3">{p.data.excerpt}</p>}

              <div class="flex items-center justify-between">
                {typeof p.data.price === "number" && (
                  <span class="font-medium">
                    {new Intl.NumberFormat("id-ID", {
                      style: "currency",
                      currency: p.data.currency ?? "IDR",
                      maximumFractionDigits: 0
                    }).format(p.data.price)}
                  </span>
                )}
                <a href={href} class="button-link space-btn-outlined text-sm">Lihat Detail</a>
              </div>
            </article>
          );
        })}
      </div>
    )}
  </section>
</MainLayout>
