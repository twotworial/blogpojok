---
import MainLayout from "../../layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import siteConfig from "../../site.config";
import { withBase } from "../../utils/helpers";

type ImgItem = string | { src: string; alt?: string };

// Hoisted helper (aman dipakai di getStaticPaths)
function toSlug(entry: any): string {
  if (entry && typeof entry.slug === "string") return entry.slug;
  const id = String(entry?.id ?? "");
  return id.replace(/^.*[\\/]/, "").replace(/\.(md|mdx)$/, "");
}

export async function getStaticPaths() {
  const items = await getCollection("products");
  return items.map((p) => ({ params: { slug: toSlug(p) } }));
}

// ---------- Page data ----------
const { slug } = Astro.params;
const siteBase = Astro.site ?? siteConfig.website ?? "https://twotworial.com";

const all = await getCollection("products");
const entry = all.find((p) => toSlug(p) === slug);
if (!entry) throw new Error(`Produk "${slug}" tidak ditemukan`);

const data = entry.data as {
  title: string;
  price?: number;
  currency?: string;
  excerpt?: string;
  url?: string;
  images?: ImgItem[];
  availability?: string;
  specs?: string;
};

const title = data.title ?? "Produk";
const currency = data.currency ?? "IDR";
const canonical = new URL(`/produk/${slug}/`, siteBase).href;
const buyUrl =
  data.url ||
  `https://wa.me/6281234567890?text=${encodeURIComponent(
    `Halo, saya mau tanya tentang ${title} (${withBase(`/produk/${slug}/`)})`
  )}`;

// Normalisasi gambar
const imgs: ImgItem[] = Array.isArray(data.images) ? data.images : [];
const normalized = imgs
  .map((it) => (typeof it === "string" ? { src: it } : it))
  .filter(Boolean)
  .map((it) => {
    const raw = it.src || "";
    const src = /^https?:\/\//i.test(raw)
      ? raw
      : withBase(raw.startsWith("/") ? raw : `/${raw}`);
    return { src, alt: it.alt ?? title };
  });

const cover = normalized[0]?.src ?? withBase("/og-image.png");

// JSON-LD Product
const productJSONLD = {
  "@context": "https://schema.org",
  "@type": "Product",
  name: title,
  image: normalized.length ? normalized.map((i) => i.src) : [cover],
  description: data.excerpt ?? undefined,
  url: canonical,
  sku: slug,
  offers:
    typeof data.price === "number"
      ? {
          "@type": "Offer",
          priceCurrency: currency,
          price: data.price,
          availability:
            data.availability && data.availability.startsWith("In")
              ? "https://schema.org/InStock"
              : "https://schema.org/PreOrder",
          url: buyUrl,
        }
      : undefined,
};
---

<MainLayout
  pageTitle={`${title} | ${siteConfig.title}`}
  description={data.excerpt ?? `Detail ${title} di Twotworial`}
  activePage="produk"
  ogImage={cover}
  canonical={canonical}
>
  <script type="application/ld+json" is:inline>
    {JSON.stringify(productJSONLD).replace(/</g, "\\u003c")}
  </script>

  <section class="page-content">
    <!-- Card Judul + Share + Harga -->
    <div class="rounded-3xl border px-5 py-4 md:px-8 md:py-6 mb-6 flex items-center justify-between flex-wrap gap-x-4 gap-y-3">
      <h1 class="text-pretty text-2xl md:text-3xl font-semibold">{title}</h1>

      <!-- Satu tombol share (gaya artikel) -->
      <button
        id="shareBtn"
        class="inline-flex items-center rounded-full border px-4 py-2 text-sm hover:bg-black hover:text-white transition"
        aria-label="Bagikan"
      >
        <svg viewBox="0 0 24 24" class="h-4 w-4 mr-2" fill="currentColor" aria-hidden="true">
          <path d="M18 8a3 3 0 10-2.83-4H15a3 3 0 003 3zM6 14a3 3 0 10.001 6.001A3 3 0 006 14zm9-1a3 3 0 100 6 3 3 0 000-6zM8.59 14.5l6.82-3.41-.45-.89-6.83 3.41.46.89zM8.14 9.39l.46.89 6.83-3.41-.46-.89L8.14 9.39z"/>
        </svg>
        Bagikan
      </button>

      {typeof data.price === "number" && (
        <div class="basis-full text-lg md:text-xl font-medium mt-1">
          {new Intl.NumberFormat("id-ID", {
            style: "currency",
            currency,
            maximumFractionDigits: 0
          }).format(data.price)}
        </div>
      )}
    </div>

    <!-- Gambar utama + thumbnail selector -->
    <div class="mb-6">
      <div class="grid md:grid-cols-2 gap-4">
        <div class="md:col-span-2">
          <img
            id="mainImg"
            src={normalized[0]?.src ?? cover}
            alt={normalized[0]?.alt ?? title}
            class="w-full aspect-square object-cover rounded-2xl"
            loading="eager"
            decoding="async"
          />
        </div>

        {normalized.length > 1 && (
          <div class="md:col-span-2 flex items-center overflow-x-auto gap-3 py-1">
            {normalized.map((img, idx) => (
              <button
                class={`shrink-0 rounded-xl border ${idx === 0 ? "ring-2 ring-black" : ""}`}
                data-thumb={img.src}
                aria-label={`Gambar ${idx + 1}`}
              >
                <img
                  src={img.src}
                  alt={img.alt ?? title}
                  class="h-20 w-20 md:h-24 md:w-24 aspect-square object-cover rounded-xl"
                  loading="lazy"
                  decoding="async"
                />
              </button>
            ))}
          </div>
        )}
      </div>
    </div>

    <!-- Tabs Deskripsi / Detail -->
    <div class="rounded-3xl border p-5 mb-6">
      <div class="flex gap-2 mb-4">
        <button id="tabDesc" class="rounded-full border px-4 py-2 text-sm bg-black text-white">
          Deskripsi
        </button>
        <button id="tabDetail" class="rounded-full border px-4 py-2 text-sm">
          Detail
        </button>
      </div>

      <div id="panelDesc" class="text-base leading-relaxed">
        {data.excerpt ?? "Tidak ada deskripsi singkat."}
        {Astro.slots.has("default") && <slot />}
      </div>

      <div id="panelDetail" class="hidden text-base leading-relaxed">
        {data.specs ? (
          <pre class="whitespace-pre-wrap">{data.specs}</pre>
        ) : (
          <p>Detail belum tersedia.</p>
        )}
      </div>
    </div>

    <!-- CTA -->
    <div class="flex flex-wrap gap-3">
      <a
        href={buyUrl}
        class="inline-flex items-center justify-center rounded-full px-6 py-3 bg-black text-white"
        target="_blank" rel="noopener noreferrer"
      >
        Beli / Hubungi
      </a>
      <a
        href={withBase(`/demo?ref=${encodeURIComponent(`/produk/${slug}/`)}`)}
        class="inline-flex items-center justify-center rounded-full px-6 py-3 border"
      >
        Coba Demo
      </a>
    </div>
  </section>

  <!-- Interaksi: share, tabs, carousel -->
  <script is:inline>
    const $ = (q) => document.querySelector(q);

    // Share (navigator.share fallback salin link)
    const shareBtn = $("#shareBtn");
    shareBtn?.addEventListener("click", async () => {
      const payload = {
        title: document.title.replace(" | Twotworial", ""),
        text: document.querySelector("h1")?.textContent ?? "",
        url: location.href
      };
      try {
        if (navigator.share) await navigator.share(payload);
        else {
          await navigator.clipboard.writeText(payload.url);
          shareBtn.textContent = "Tautan Disalin";
          setTimeout(() => (shareBtn.textContent = "Bagikan"), 1400);
        }
      } catch {}
    });

    // Tabs
    const tabDesc = $("#tabDesc");
    const tabDetail = $("#tabDetail");
    const panelDesc = $("#panelDesc");
    const panelDetail = $("#panelDetail");
    const setOn = (btn) => btn.classList.add("bg-black", "text-white");
    const setOff = (btn) => btn.classList.remove("bg-black", "text-white");

    tabDesc?.addEventListener("click", () => {
      setOn(tabDesc); setOff(tabDetail);
      panelDesc?.classList.remove("hidden");
      panelDetail?.classList.add("hidden");
    });
    tabDetail?.addEventListener("click", () => {
      setOn(tabDetail); setOff(tabDesc);
      panelDetail?.classList.remove("hidden");
      panelDesc?.classList.add("hidden");
    });

    // Carousel
    const mainImg = $("#mainImg");
    document.querySelectorAll("[data-thumb]").forEach((btn) => {
      btn.addEventListener("click", () => {
        const src = btn.getAttribute("data-thumb");
        if (src && mainImg) mainImg.setAttribute("src", src);
        document.querySelectorAll("[data-thumb]").forEach((b) =>
          b.classList.remove("ring-2","ring-black")
        );
        btn.classList.add("ring-2","ring-black");
      });
    });
  </script>
</MainLayout>
