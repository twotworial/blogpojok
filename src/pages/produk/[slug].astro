---
import MainLayout from "../../layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import { withBase } from "../../utils/helpers";
import siteConfig from "../../site.config";

/** Hitung slug langsung, tanpa helper terpisah */
function computeSlug(entry: { slug?: string; id: string; data?: any }): string | undefined {
  if (entry?.slug && typeof entry.slug === "string") return entry.slug;
  if (entry?.data?.slug && typeof entry.data.slug === "string") return entry.data.slug;
  const last = (entry?.id || "").split("/").pop() || "";
  const base = last.replace(/\.(md|mdx)$/i, "");
  return base || undefined;
}

/** Normalisasi URL gambar dari /public atau http(s) */
function imgUrl(raw?: string) {
  if (!raw) return undefined;
  if (/^https?:\/\//i.test(raw)) return raw;          // URL eksternal
  return raw.startsWith("/") ? raw : `/${raw}`;        // file di /public
}

/** Wajib: kembalikan semua rute detail produk */
export async function getStaticPaths() {
  const all = await getCollection("products");
  const paths = all
    .map((p) => {
      const s = computeSlug(p);
      return s ? { params: { slug: s } } : null;
    })
    .filter((x): x is { params: { slug: string } } => !!x);

  return paths;
}

const { slug } = Astro.params;

/** Cari entri sesuai slug yang diminta */
const all = await getCollection("products");
const entry =
  all.find((p) => computeSlug(p) === slug) ??
  (() => {
    throw new Error(`Produk dengan slug "${slug}" tidak ditemukan`);
  })();

const data = entry.data ?? {};
const siteBase = Astro.site?.href ?? siteConfig.website ?? "https://twotworial.com";
const canonical = new URL(`/produk/${slug}/`, siteBase).href;

/** Bentuk array gambar: dukung string atau object {src,alt} */
const images: Array<{ src: string; alt?: string }> = Array.isArray(data.images)
  ? data.images.map((it: any) =>
      typeof it === "string" ? { src: it, alt: data.title } : it
    )
  : [];

/** JSON-LD: Product */
const productJSONLD = {
  "@context": "https://schema.org",
  "@type": "Product",
  name: data.title,
  description: data.excerpt ?? data.description ?? "",
  image: images.map((i) => new URL(imgUrl(i.src)!, siteBase).href),
  offers: {
    "@type": "Offer",
    priceCurrency: data.currency ?? "IDR",
    price: typeof data.price === "number" ? String(data.price) : undefined,
    availability: data.availability ? `https://schema.org/${data.availability}` : undefined,
    url: canonical
  }
};

/** JSON-LD: Breadcrumb */
const breadcrumbJSONLD = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    { "@type": "ListItem", position: 1, name: "Home", item: siteBase },
    { "@type": "ListItem", position: 2, name: "Produk", item: new URL("/produk/", siteBase).href },
    { "@type": "ListItem", position: 3, name: data.title, item: canonical }
  ]
};
---

<MainLayout
  activePage="produk"
  pageTitle={`${data.title} | ${siteConfig.title}`}
  description={data.excerpt ?? data.description ?? ""}
  breadcrumbTitle={data.title}
  canonical={canonical}
>
  <!-- Schema aman dari </script> injection -->
  <script type="application/ld+json" is:inline>
    {JSON.stringify(productJSONLD).replace(/</g, "\\u003c")}
  </script>
  <script type="application/ld+json" is:inline>
    {JSON.stringify(breadcrumbJSONLD).replace(/</g, "\\u003c")}
  </script>

  <section class="page-content">
    <!-- Header card + tombol share -->
    <div class="rounded-2xl border p-5 mb-6 flex flex-wrap items-center justify-between gap-4">
      <h1 class="text-2xl font-semibold m-0">{data.title}</h1>
      <div class="flex gap-2">
        <a
          class="space-btn-outlined button-link text-sm"
          href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(canonical)}&text=${encodeURIComponent(data.title)}`}
          target="_blank" rel="noopener nofollow"
        >Bagikan X</a>
        <a
          class="space-btn-outlined button-link text-sm"
          href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(canonical)}`}
          target="_blank" rel="noopener nofollow"
        >Bagikan FB</a>
      </div>
    </div>

    <!-- Harga + CTA -->
    <div class="text-center mb-6">
      {typeof data.price === "number" && (
        <p class="mb-3 font-semibold">
          {new Intl.NumberFormat("id-ID", { style: "currency", currency: data.currency ?? "IDR", maximumFractionDigits: 0 }).format(data.price)}
        </p>
      )}
      {data.url && (
        <a href={data.url} class="button-link space-btn-filled">Beli / Hubungi</a>
      )}
    </div>

    <!-- Galeri: kotak 1:1 (square) dan penuh lebar container -->
    {images.length > 0 && (
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-8">
        {images.map((img, i) => (
          <img
            src={imgUrl(img.src)}
            alt={img.alt || data.title}
            class="w-full aspect-square object-cover rounded-xl"
            loading={i === 0 ? "eager" : "lazy"}
            decoding="async"
          />
        ))}
      </div>
    )}

    <!-- Tab: Deskripsi / Detail -->
    <div class="rounded-2xl border p-4 mb-6">
      <div class="flex gap-3 mb-4">
        <button class="tab-btn space-btn-outlined px-4 py-2 rounded-full" data-tab="desc">Deskripsi</button>
        <button class="tab-btn space-btn-outlined px-4 py-2 rounded-full" data-tab="detail">Detail</button>
      </div>

      <div id="tab-desc" class="prose max-w-none">
        {data.excerpt && <p>{data.excerpt}</p>}
        <slot />
      </div>

      <div id="tab-detail" class="prose max-w-none hidden">
        <ul class="list-disc pl-5">
          {data.sku && <li><b>SKU:</b> {data.sku}</li>}
          {data.brand && <li><b>Merek:</b> {data.brand}</li>}
          {data.tags && Array.isArray(data.tags) && data.tags.length > 0 && <li><b>Tags:</b> {data.tags.join(", ")}</li>}
          {data.availability && <li><b>Ketersediaan:</b> {data.availability}</li>}
        </ul>
      </div>
    </div>

    {data.url && (
      <div class="text-center">
        <a href={data.url} class="button-link space-btn-filled">Beli Sekarang</a>
      </div>
    )}
  </section>

  <script is:inline>
    const btns = document.querySelectorAll(".tab-btn");
    const desc = document.getElementById("tab-desc");
    const detail = document.getElementById("tab-detail");
    btns.forEach((b) => b.addEventListener("click", () => {
      const which = b.dataset.tab;
      if (which === "desc") { desc?.classList.remove("hidden"); detail?.classList.add("hidden"); }
      else { detail?.classList.remove("hidden"); desc?.classList.add("hidden"); }
    }));
  </script>
</MainLayout>
