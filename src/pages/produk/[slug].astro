---
// src/pages/produk/[slug].astro
import MainLayout from "../../layouts/MainLayout.astro";
import siteConfig from "../../site.config";
import { getCollection } from "astro:content";
import { withBase } from "../../utils/helpers";

// Ambil semua entri & bentuk path statis
export async function getStaticPaths() {
  const list = await getCollection("products");
  return list.map((entry) => {
    // slug dari frontmatter, atau fallback dari nama file
    const slug =
      typeof entry?.slug === "string" && entry.slug
        ? entry.slug
        : String(entry?.id ?? "").split("/").pop()?.replace(/\.mdx?$/i, "") ?? "";

    return {
      params: { slug },
      props: { entry }, // oper semua data ke halaman
    };
  });
}

// Props dari getStaticPaths
const { entry } = Astro.props as { entry: any };
const data = entry?.data ?? {};

// Render markdown body bila ada
let Content: any = null;
try {
  const rendered = await entry.render?.();
  Content = rendered?.Content ?? null;
} catch {}

// Base URL & canonical
const siteBase = (Astro.site ?? siteConfig.website ?? "https://twotworial.com").toString();
const slug =
  typeof entry?.slug === "string" && entry.slug
    ? entry.slug
    : String(entry?.id ?? "").split("/").pop()?.replace(/\.mdx?$/i, "") ?? "";
const canonical = new URL(`/produk/${slug}/`, siteBase).href;

// Normalisasi gambar
type Img = { src: string; alt?: string };
function normalizeImages(v: any): Img[] {
  if (!v) return [];
  if (Array.isArray(v)) {
    return v
      .map((it) => (typeof it === "string" ? { src: it, alt: data.title } : it))
      .filter((it) => it?.src);
  }
  if (typeof v === "string") return [{ src: v, alt: data.title }];
  if (typeof v === "object" && v.src) return [v];
  return [];
}
const images = normalizeImages(data.images);

function imgUrl(src?: string) {
  if (!src) return undefined;
  if (/^https?:\/\//i.test(src)) return src;
  // gambar di /public/* cukup “/path”
  return src.startsWith("/") ? src : `/${src}`;
}
const firstImg = images.length ? imgUrl(images[0].src) : "/TwotworialSQ.webp";

// Harga
const currency = data.currency ?? "IDR";
const money = (n: number) =>
  new Intl.NumberFormat("id-ID", { style: "currency", currency, maximumFractionDigits: 0 }).format(n);

// SEO
const ogTitle = `${data.title} | ${siteConfig.title}`;
const ogDesc = data.excerpt ?? data.description ?? "Detail produk Twotworial.";
const ogImage = firstImg;

// JSON-LD
const breadcrumbJSONLD = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    { "@type": "ListItem", "position": 1, "name": "Home", "item": siteBase },
    { "@type": "ListItem", "position": 2, "name": "Produk", "item": new URL("/produk/", siteBase).href },
    { "@type": "ListItem", "position": 3, "name": data.title, "item": canonical }
  ]
};

const productJSONLD: any = {
  "@context": "https://schema.org",
  "@type": "Product",
  "name": data.title,
  "description": ogDesc,
  "url": canonical,
  "image": images.map((i) => imgUrl(i.src)),
};
if (data.brand) productJSONLD.brand = { "@type": "Brand", "name": data.brand };
if (typeof data.price === "number") {
  productJSONLD.offers = {
    "@type": "Offer",
    "price": data.price,
    "priceCurrency": currency,
    "availability": data.availability ? `https://schema.org/${data.availability}` : "https://schema.org/InStock",
    "url": canonical
  };
}
---

<MainLayout
  activePage="produk"
  pageTitle={ogTitle}
  description={ogDesc}
  breadcrumbTitle={data.title}
>
  <!-- Canonical & OG/Twitter -->
  <link rel="canonical" href={canonical} />
  <meta property="og:type" content="product" />
  <meta property="og:title" content={ogTitle} />
  <meta property="og:description" content={ogDesc} />
  <meta property="og:url" content={canonical} />
  <meta property="og:image" content={ogImage} />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={ogTitle} />
  <meta name="twitter:description" content={ogDesc} />
  <meta name="twitter:image" content={ogImage} />

  <!-- JSON-LD -->
  <script type="application/ld+json" is:inline>
    {JSON.stringify(breadcrumbJSONLD).replace(/</g, "\\u003c")}
  </script>
  <script type="application/ld+json" is:inline>
    {JSON.stringify(productJSONLD).replace(/</g, "\\u003c")}
  </script>

  <section class="mx-auto max-w-5xl px-4 md:px-6">
    <!-- Judul (card) + share -->
    <div class="mt-6 rounded-3xl border p-5 md:flex md:items-center md:justify-between">
      <h1 class="text-3xl font-bold tracking-tight text-balance">{data.title}</h1>
      <div class="mt-3 flex flex-wrap items-center gap-[0.5rem] md:mt-0">
        <button id="btn-share" class="inline-flex items-center rounded-3xl border px-4 py-2 hover:bg-black/5">Bagikan</button>
        <a
          class="inline-flex items-center rounded-3xl border px-4 py-2 hover:bg-black/5"
          href={"https://x.com/intent/tweet?text=" + encodeURIComponent(`${data.title} — ${ogDesc}`) + "&url=" + encodeURIComponent(canonical)}
          target="_blank" rel="noopener noreferrer">Bagikan X</a>
        <a
          class="inline-flex items-center rounded-3xl border px-4 py-2 hover:bg-black/5"
          href={"https://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(canonical)}
          target="_blank" rel="noopener noreferrer">Bagikan FB</a>
      </div>
    </div>

    <!-- Harga -->
    {typeof data.price === "number" && (
      <p class="mt-6 text-center text-xl font-semibold">{money(data.price)}</p>
    )}

    <!-- Galeri (1:1, full sampai tepi card) -->
    {images.length > 0 && (
      <div class="mt-6">
        <div class="grid grid-cols-1 gap-[0.75rem] md:grid-cols-2">
          {images.slice(0, 2).map((img, i) => (
            <div class="overflow-hidden rounded-2xl">
              <img
                src={imgUrl(img.src)}
                alt={img.alt ?? data.title}
                class="aspect-square h-full w-full object-cover"
                loading={i === 0 ? "eager" : "lazy"}
                decoding="async"
              />
            </div>
          ))}
        </div>

        {images.length > 2 && (
          <div class="mt-3 flex gap-[0.5rem] overflow-x-auto pb-1">
            {images.slice(2).map((img) => (
              <img
                src={imgUrl(img.src)}
                alt={img.alt ?? data.title}
                class="h-24 w-24 shrink-0 rounded-xl border object-cover"
                loading="lazy" decoding="async"
              />
            ))}
          </div>
        )}
      </div>
    )}

    <!-- Tabs Deskripsi / Detail -->
    <div class="mt-8 rounded-3xl border p-4">
      <div class="flex gap-[0.5rem]">
        <button id="tab-desc" class="rounded-2xl px-4 py-2 bg-black text-white">Deskripsi</button>
        <button id="tab-detail" class="rounded-2xl px-4 py-2 hover:bg-black/5">Detail</button>
      </div>

      <div class="mt-4 space-y-3">
        <div id="panel-desc">
          <p class="text-lg text-balance">{ogDesc}</p>
          {Content && <div class="prose mt-4 max-w-none"><Content /></div>}
        </div>

        <div id="panel-detail" class="hidden">
          {data.specs ? (
            <div class="prose max-w-none" set:html={data.specs} />
          ) : (
            <p class="text-gray-500">Belum ada detail tambahan.</p>
          )}
        </div>
      </div>
    </div>

    <!-- CTA -->
    <div class="mt-6 flex flex-wrap items-center justify-center gap-[0.75rem]">
      {data.demo && (
        <a class="inline-flex items-center rounded-3xl border px-6 py-3 hover:bg-black/5" href={data.demo} target="_blank" rel="noopener noreferrer">Demo</a>
      )}
      {data.url && (
        <a class="inline-flex items-center rounded-3xl bg-black px-6 py-3 text-white hover:bg-black/90" href={data.url} target="_blank" rel="noopener noreferrer">Beli Sekarang</a>
      )}
    </div>
  </section>

  <script is:inline>
    const SHARE_TITLE = {JSON.stringify(ogTitle)};
    const SHARE_TEXT  = {JSON.stringify(ogDesc)};
    const SHARE_URL   = {JSON.stringify(canonical)};

    const shareBtn = document.getElementById('btn-share');
    shareBtn?.addEventListener('click', async () => {
      const payload = { title: SHARE_TITLE, text: SHARE_TEXT, url: SHARE_URL };
      if (navigator.share) {
        try { await navigator.share(payload); } catch {}
      } else {
        try { await navigator.clipboard.writeText(SHARE_URL); shareBtn.textContent = 'Tautan Disalin'; setTimeout(()=>shareBtn.textContent='Bagikan',1500); } catch {}
      }
    });

    const tabDesc   = document.getElementById('tab-desc');
    const tabDetail = document.getElementById('tab-detail');
    const panelDesc = document.getElementById('panel-desc');
    const panelDet  = document.getElementById('panel-detail');

    function setActive(which){
      if(which==='desc'){
        tabDesc.classList.add('bg-black','text-white');
        tabDetail.classList.remove('bg-black','text-white');
        panelDesc.classList.remove('hidden');
        panelDet.classList.add('hidden');
      }else{
        tabDetail.classList.add('bg-black','text-white');
        tabDesc.classList.remove('bg-black','text-white');
        panelDet.classList.remove('hidden');
        panelDesc.classList.add('hidden');
      }
    }
    tabDesc?.addEventListener('click',()=>setActive('desc'));
    tabDetail?.addEventListener('click',()=>setActive('det'));
  </script>
</MainLayout>
