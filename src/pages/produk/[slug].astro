---
import MainLayout from "../../layouts/MainLayout.astro";
import { getCollection, getEntry } from "astro:content";
import siteConfig from "../../site.config";
import { withBase } from "../../utils/helpers";

export async function getStaticPaths() {
  const entries = await getCollection("products");
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { slug: entry.slug },
  }));
}

const { slug } = Astro.props as { slug: string };

// ambil entry & html
const entry = await getEntry("products", slug);
if (!entry) throw new Error("Produk tidak ditemukan");

const { Content } = await entry.render();

const siteBase = Astro.site ?? siteConfig.website ?? "https://twotworial.com";
const canonicalUrl = new URL(`/produk/${slug}/`, siteBase).href;

const data:any = entry.data;

// normalisasi array gambar (string atau object)
const images: {src:string; alt?:string}[] = (Array.isArray(data.images) ? data.images : [])
  .map((it:any) => typeof it === "string" ? { src: it } : it)
  .filter(Boolean)
  .map((it) => ({
    src: /^https?:\/\//i.test(it.src) ? it.src : (it.src?.startsWith("/") ? it.src : `/${it.src}`),
    alt: it.alt ?? data.title,
  }));

// harga & aval
const price = typeof data.price === "number" ? data.price : undefined;
const currency = data.currency ?? "IDR";
const availability = data.availability ?? "InStock";

// Breadcrumb JSON-LD
const breadcrumbJSONLD = {
  "@context":"https://schema.org",
  "@type":"BreadcrumbList",
  itemListElement:[
    { "@type":"ListItem", position:1, name:"Home", item:new URL("/", siteBase).href },
    { "@type":"ListItem", position:2, name:"Produk", item:new URL("/produk/", siteBase).href },
    { "@type":"ListItem", position:3, name:data.title, item: canonicalUrl }
  ]
};

// Product JSON-LD
const productJSONLD:any = {
  "@context":"https://schema.org",
  "@type":"Product",
  name: data.title,
  description: data.excerpt ?? data.metaDescription ?? "",
  url: canonicalUrl,
  image: images.map(i => new URL(i.src, siteBase).href),
  brand: data.brand ? { "@type":"Brand", name:data.brand } : undefined,
  sku: data.sku,
  offers: price ? {
    "@type":"Offer",
    priceCurrency: currency,
    price: String(price),
    availability: `https://schema.org/${availability}`,
    url: canonicalUrl
  } : undefined,
};
---
<MainLayout
  activePage="produk"
  pageTitle={`${data.title} | ${siteConfig.title}`}
  description={data.excerpt ?? data.metaDescription ?? siteConfig.description}
  breadcrumbTitle={data.title}
  image={images[0]?.src}
>
  {/* JSON-LD */}
  <script type="application/ld+json" is:inline>
    {JSON.stringify(breadcrumbJSONLD).replace(/</g, "\\u003c")}
  </script>
  <script type="application/ld+json" is:inline>
    {JSON.stringify(productJSONLD).replace(/</g, "\\u003c")}
  </script>

  <section class="page-content !text-left max-w-3xl mx-auto">
    {/* Judul di dalam card + tombol share */}
    <div class="rounded-2xl border p-5 mb-5 flex items-start justify-between gap-3">
      <div>
        <h1 class="text-2xl sm:text-3xl font-bold mb-1">{data.title}</h1>
        {data.excerpt && <p class="text-sm opacity-80">{data.excerpt}</p>}
        {price && (
          <p class="mt-2 font-semibold">
            {new Intl.NumberFormat("id-ID",{style:"currency",currency,maximumFractionDigits:0}).format(price)}
          </p>
        )}
      </div>
      <button
        class="button-link space-btn-outlined text-sm shrink-0"
        id="shareBtn"
        aria-label="Bagikan produk ini"
      >Share</button>
    </div>

    {/* Carousel gambar di bawah judul */}
    {images.length > 0 && (
      <div class="mb-6">
        <div class="overflow-hidden rounded-2xl border">
          <div class="w-full aspect-square">
            <img id="heroImg" src={images[0].src} alt={images[0].alt ?? data.title}
                 class="h-full w-full object-cover" loading="eager" />
          </div>
        </div>

        {images.length > 1 && (
          <div class="mt-3 grid grid-cols-4 sm:grid-cols-6 gap-2">
            {images.map((im, idx) => (
              <button
                class="thumb rounded-xl overflow-hidden border focus:outline-none"
                data-src={im.src}
                aria-label={`Gambar ${idx+1}`}
              >
                <div class="aspect-square">
                  <img src={im.src} alt={im.alt ?? data.title} class="h-full w-full object-cover" loading="lazy" />
                </div>
              </button>
            ))}
          </div>
        )}
      </div>
    )}

    {/* Tabs: Deskripsi / Detail */}
    <div class="rounded-2xl border">
      <div class="flex gap-2 p-2 border-b">
        <button class="tab-btn button-link space-btn-outlined text-sm" data-tab="desc">Deskripsi</button>
        <button class="tab-btn button-link text-sm" data-tab="detail">Detail</button>
      </div>
      <div class="p-5">
        <div id="tab-desc">
          <Content />
        </div>
        <div id="tab-detail" class="hidden">
          <ul class="list-disc pl-5 space-y-1 text-sm">
            {data.tags?.length && (
              <li><strong>Tag:</strong> {data.tags.join(", ")}</li>
            )}
            {data.brand && <li><strong>Merek:</strong> {data.brand}</li>}
            {data.sku && <li><strong>SKU:</strong> {data.sku}</li>}
            {availability && <li><strong>Ketersediaan:</strong> {availability}</li>}
            {price && (
              <li><strong>Harga:</strong> {
                new Intl.NumberFormat("id-ID",{style:"currency",currency,maximumFractionDigits:0}).format(price)
              }</li>
            )}
          </ul>
        </div>
      </div>
    </div>

    {/* Tombol Beli di bawah */}
    {data.url && (
      <div class="mt-6 flex">
        <a href={data.url} target="_blank" rel="noopener noreferrer" class="button-link space-btn-filled">
          Beli / Hubungi
        </a>
      </div>
    )}
  </section>

  {/* Interaksi kecil: share, carousel, tabs */}
  <script is:inline>
    const shareBtn = document.getElementById('shareBtn');
    if (shareBtn) {
      shareBtn.addEventListener('click', async () => {
        const data = {
          title: document.title,
          url: location.href,
          text: document.querySelector('h1')?.textContent || ''
        };
        try {
          if (navigator.share) await navigator.share(data);
          else {
            await navigator.clipboard.writeText(location.href);
            alert('Link disalin ke clipboard!');
          }
        } catch {}
      });
    }

    const hero = document.getElementById('heroImg');
    document.querySelectorAll('.thumb').forEach(btn => {
      btn.addEventListener('click', () => {
        const src = btn.getAttribute('data-src');
        if (src && hero) hero.setAttribute('src', src);
        document.querySelectorAll('.thumb').forEach(b => b.classList.remove('ring-2','ring-black'));
        btn.classList.add('ring-2','ring-black');
      });
    });

    const tabs = document.querySelectorAll('.tab-btn');
    const desc = document.getElementById('tab-desc');
    const detail = document.getElementById('tab-detail');
    function activate(which){
      if (!desc || !detail) return;
      if (which === 'detail') { detail.classList.remove('hidden'); desc.classList.add('hidden'); }
      else { desc.classList.remove('hidden'); detail.classList.add('hidden'); }
      tabs.forEach(t => t.classList.toggle('space-btn-outlined', t.getAttribute('data-tab') === which));
    }
    tabs.forEach(t => t.addEventListener('click', () => activate(t.getAttribute('data-tab'))));
    activate('desc');
  </script>
</MainLayout>
