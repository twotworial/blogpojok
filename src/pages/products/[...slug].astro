---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import MainLayout from "../../layouts/MainLayout.astro";
import siteConfig from "../../site.config";

export const getStaticPaths: GetStaticPaths = async () => {
  const entries = await getCollection("products");
  return entries.map((p) => ({
    params: { slug: [p.slug ?? p.id] },
    props: { product: p },
  }));
};

type Props = {
  product: import("astro:content").CollectionEntry<"products">;
};
const { product } = Astro.props as Props;
const p = product.data;

const title = p.metaTitle ?? p.title;
const desc  = p.metaDescription ?? p.excerpt ?? "";
const canonical = new URL(`/products/${product.slug ?? product.id}/`, Astro.site ?? siteConfig.website ?? "https://twotworial.com").href;

const offer = {
  "@type": "Offer",
  price: p.price,
  priceCurrency: p.currency ?? "IDR",
  availability: `https://schema.org/${p.availability}`,
  url: canonical
};
---

<MainLayout
  activePage="products"
  pageTitle={title}
  description={desc}
  image={p.images?.[0]?.src}
  breadcrumbTitle={p.title}
>
  <head>
    <link rel="canonical" href={canonical} />
    <script type="application/ld+json" is:inline>
      {JSON.stringify({
        "@context":"https://schema.org",
        "@type":"Product",
        name: p.title,
        image: p.images?.map(i => new URL(i.src, Astro.site ?? "https://twotworial.com").href),
        description: desc,
        sku: p.sku,
        brand: p.brand ? { "@type":"Brand", name: p.brand } : undefined,
        offers: offer
      })}
    </script>
  </head>

  <section class="page-content">
    <div class="grid gap-8 md:grid-cols-2">
      <div class="space-y-4">
        {p.images?.map(i => (
          <img
            src={i.src}
            alt={i.alt ?? p.title}
            width="800"
            height="600"
            loading="eager"
            decoding="async"
            class="w-full h-auto rounded-2xl object-cover"
          />
        ))}
      </div>

      <div class="flex flex-col gap-4">
        <h1>{p.title}</h1>
        {p.excerpt && <p>{p.excerpt}</p>}
        <div class="text-2xl font-semibold">
          {new Intl.NumberFormat("id-ID",{style:"currency",currency:p.currency||"IDR"}).format(p.price)}
        </div>
        <div class="flex gap-2">
          {p.url && <a href={p.url} target="_blank" rel="noopener" class="button-link space-btn-filled">Beli / Hubungi</a>}
          <a href="/products" class="button-link space-btn-outlined">Kembali</a>
        </div>

        <article class="prose mt-6">
          <slot />
        </article>
      </div>
    </div>
  </section>
</MainLayout>
