---
// src/pages/blog/[id].astro
import "../../styles/global.css";
import {
  sortItemsByDateDesc,
  createSlugFromTitle,
  withBase,
} from "../../utils/helpers";
import { type CollectionEntry, getCollection, render } from "astro:content";
import Button from "../../components/Button.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import ArrowLeft from "../../icons/ArrowLeft.astro";
import ArrowRight from "../../icons/ArrowRight.astro";
import siteConfig from "../../site.config";

export async function getStaticPaths() {
  const posts = (await getCollection("blogs")).sort(sortItemsByDateDesc);
  const postCount = posts.length;
  return posts.map((post, index) => ({
    params: { id: post.id },
    props: {
      post,
      prevPost: index + 1 !== postCount ? posts[index + 1] : null,
      nextPost: index !== 0 ? posts[index - 1] : null,
    },
  }));
}

type Props = {
  post: CollectionEntry<"blogs">;
  prevPost: CollectionEntry<"blogs"> | null;
  nextPost: CollectionEntry<"blogs"> | null;
};

const { post, prevPost, nextPost } = Astro.props as Props;
const { title, pubDate, author, tags = [], image } = post.data;
const { Content } = await render(post);

// ==== Normalisasi gambar hero (aman untuk semua bentuk) ====
const siteBase = Astro.site?.toString() ?? siteConfig.website;
const isHttp = (s: string) => /^https?:\/\//i.test(s);
const abs = (u?: string) =>
  u
    ? new URL(
        u.startsWith("/") || isHttp(u) ? withBase(u) : withBase("/" + u),
        siteBase,
      ).href
    : undefined;

let heroSrc: string | undefined;
let heroAlt: string =
  (typeof image === "object" && image && "alt" in image && (image as any).alt) ||
  title ||
  "";

// 4 jalur: function | object.url(function) | object.url(string) | string
if (typeof image === "function") {
  const meta = await image(); // schema image() -> ImageMetadata
  heroSrc = abs(meta?.src as string);
} else if (image && typeof image === "object" && "url" in image) {
  const urlVal = (image as any).url;
  if (typeof urlVal === "function") {
    const meta = await urlVal();
    heroSrc = abs(meta?.src as string);
  } else if (typeof urlVal === "string") {
    heroSrc = abs(urlVal);
  }
} else if (typeof image === "string") {
  heroSrc = abs(image);
}

const dateStr = pubDate
  ? new Date(pubDate as any).toLocaleDateString("id-ID", {
      day: "2-digit",
      month: "long",
      year: "numeric",
    })
  : "";
---

<MainLayout pageTitle={`${siteConfig.title} | ${title}`} description={post.data.description ?? siteConfig.description} image={heroSrc}>
  <div class="page-content">
    <h1 class="sigmar-ff text-center text-balance">{title}</h1>

    <p class="kanit-regular text-center text-balance text-xs leading-8">
      by üßë‚ÄçüöÄ <span class="kanit-bold">{author}</span>
      {dateStr && <> pada <span class="kanit-bold">{dateStr}</span></>}
    </p>

    {heroSrc && (
      <img
        class="my-6 mb-8 w-full rounded-xl object-cover"
        src={heroSrc}
        alt={heroAlt}
        loading="eager"
        decoding="async"
      />
    )}

    <div class="font-light text-left prose prose-neutral dark:prose-invert max-w-none">
      <Content />
    </div>

    {tags.length > 0 && (
      <p class="kanit-regular text-center text-balance text-xs mt-8">
        Tagged:
        {tags.map((tag) => (
          <Button class="px-4! m-2" href={withBase("/tags/" + createSlugFromTitle(tag))}>
            {tag}
          </Button>
        ))}
      </p>
    )}

    <div class="my-8 flex flex-col items-center justify-center gap-4 sm:flex-row">
      <Button class="back-link" href={withBase("/blog")}>
        <ArrowLeft class="mr-4 h-5 w-5 fill-current" /> Semua Artikel
      </Button>

      {prevPost && (
        <Button class="back-link text-balance" href={withBase(`/blog/${prevPost.id}`)}>
          <ArrowLeft class="mr-2 h-5 w-5 fill-current" /> {prevPost.data.title}
        </Button>
      )}

      {nextPost && (
        <Button class="back-link text-balance" href={withBase(`/blog/${nextPost.id}`)}>
          {nextPost.data.title} <ArrowRight class="ml-2 h-5 w-5 fill-current" />
        </Button>
      )}
    </div>
  </div>
</MainLayout>
