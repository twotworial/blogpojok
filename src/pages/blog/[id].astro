---
import "../../styles/global.css";
import type { CollectionEntry } from "astro:content";
import { getCollection, render } from "astro:content";
import { Image } from "astro:assets";
import Button from "../../components/Button.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import ArrowLeft from "../../icons/ArrowLeft.astro";
import ArrowRight from "../../icons/ArrowRight.astro";
import { sortItemsByDateDesc, createSlugFromTitle, withBase } from "../../utils/helpers";

// baru: share & disqus + site config
import ShareButtons from "../../components/ShareButtons.astro";
import DisqusComments from "../../components/DisqusComments.astro";
import siteConfig from "../../site.config";

export async function getStaticPaths() {
  const posts = (await getCollection("blogs")).sort(sortItemsByDateDesc);
  const postCount = posts.length;

  return posts.map((post, index) => ({
    params: { id: post.id },
    props: {
      post,
      prevPost: index + 1 !== postCount ? posts[index + 1] : null,
      nextPost: index !== 0 ? posts[index - 1] : null,
    },
  }));
}

type Props = {
  post: CollectionEntry<"blogs">;
  prevPost: CollectionEntry<"blogs"> | null;
  nextPost: CollectionEntry<"blogs"> | null;
};

const { post, prevPost, nextPost } = Astro.props as Props;
const { Content } = await render(post);

// bersihin awalan "$" kalau ada di frontmatter title
const safeTitle = (post.data.title ?? "").replace(/^\s*\$/,"");

const {
  pubDate,
  author = "Twotworial",
  tags = [],
  image,
} = { pubDate: post.data.pubDate, author: post.data.author, tags: post.data.tags, image: post.data.image };

// resolve cover
type ResolvedImg =
  | { kind: "asset"; src: any; alt: string }
  | { kind: "external"; src: string; alt: string };

function resolveImage(img: unknown, fallbackAlt: string): ResolvedImg | null {
  if (!img) return null;

  // ImageMetadata (hasil schema image())
  if (typeof img === "object" && img !== null && "src" in (img as any) && "width" in (img as any)) {
    const meta = img as any;
    const alt = meta.alt ?? fallbackAlt;
    return { kind: "asset", src: meta, alt };
    }

  // { url, alt } (url bisa ImageMetadata atau string)
  if (typeof img === "object" && img !== null && "url" in (img as any)) {
    const obj = img as any;
    const alt = obj.alt ?? fallbackAlt;

    if (obj.url && typeof obj.url === "object" && "src" in obj.url && "width" in obj.url) {
      return { kind: "asset", src: obj.url, alt };
    }
    if (typeof obj.url === "string") {
      return { kind: "external", src: obj.url, alt };
    }
  }

  // string URL murni
  if (typeof img === "string") {
    return { kind: "external", src: img, alt: fallbackAlt };
  }

  return null;
}

const cover = resolveImage(image, safeTitle);

// absolute URL untuk share + disqus
const slug = Astro.params.id!;
const pagePath = withBase(`/blog/${slug}`);
const baseOrigin =
  (Astro.site && Astro.site.origin) ||
  (siteConfig as any)?.baseUrl ||
  "https://twotworial.com";
const pageUrl = new URL(pagePath, baseOrigin).toString();
---

<MainLayout pageTitle={`${safeTitle} | Twotworial`}>
  <div class="page-content">
    <h1 class="sigmar-ff text-center text-balance">{safeTitle}</h1>

    <p class="kanit-regular text-center text-xs">
      by üßë‚ÄçüöÄ <span class="kanit-bold">{author}</span> pada{" "}
      <span class="kanit-bold">
        {new Date(pubDate).toLocaleDateString("id-ID", {
          day: "2-digit",
          month: "long",
          year: "numeric",
        })}
      </span>
    </p>

    <!-- tombol share di atas konten -->
    <div class="mt-4 mb-6 flex justify-center">
      <ShareButtons title={safeTitle} url={pageUrl} />
    </div>

    {cover && cover.kind === "asset" && (
      <Image
        class="my-6 rounded-xl"
        src={cover.src}
        alt={cover.alt}
        loading="eager"
        decoding="async"
        sizes="(max-width: 768px) 92vw, 768px"
      />
    )}
    {cover && cover.kind === "external" && (
      <img
        class="my-6 rounded-xl"
        src={cover.src}
        alt={cover.alt}
        loading="eager"
        decoding="async"
        referrerpolicy="no-referrer"
      />
    )}

    <div class="font-light text-left">
      <Content />
    </div>

    <!-- tombol share di bawah konten -->
    <div class="mt-8">
      <ShareButtons title={safeTitle} url={pageUrl} />
    </div>

    {tags.length > 0 && (
      <p class="kanit-regular text-center text-balance text-xs mt-8">
        Tagged:
        {tags.map((tag) => (
          <Button class="px-4! m-2" href={withBase("/tags/" + createSlugFromTitle(tag))}>
            {tag}
          </Button>
        ))}
      </p>
    )}

    <!-- komentar disqus -->
    <DisqusComments pageUrl={pageUrl} pageId={slug} class="mt-10" />

    <div class="my-8 flex flex-col items-center justify-center gap-4 sm:flex-row">
      <Button class="back-link" href={withBase("/blog")}>
        <ArrowLeft class="mr-4 h-5 w-5 fill-current" /> Semua Artikel
      </Button>

      {prevPost && (
        <Button class="back-link text-balance" href={withBase("/blog/" + prevPost.id)}>
          <ArrowLeft class="mr-4 h-5 w-5 fill-current" /> {prevPost.data.title}
        </Button>
      )}
      {nextPost && (
        <Button class="back-link text-balance" href={withBase("/blog/" + nextPost.id)}>
          {nextPost.data.title} <ArrowRight class="ml-4 h-5 w-5 fill-current" />
        </Button>
      )}
    </div>
  </div>

  <!-- (opsional) counter komentar Disqus untuk halaman listing, diletakkan sekali di layout global.
       Kalau belum ditambahkan di layout, boleh aktifkan baris di bawah:
  <script id="dsq-count-scr" src="//twotworial.disqus.com/count.js" async></script>
  -->
</MainLayout>
