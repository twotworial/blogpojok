---
import "../../styles/global.css";
import { Image as AstroImage } from "astro:assets";
import {
  sortItemsByDateDesc,
  createSlugFromTitle,
  withBase,
} from "../../utils/helpers";
import {
  type CollectionEntry,
  getCollection,
  render,
} from "astro:content";
import Button from "../../components/Button.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import ArrowLeft from "../../icons/ArrowLeft.astro";
import ArrowRight from "../../icons/ArrowRight.astro";
import siteConfig from "../../site.config";

export async function getStaticPaths() {
  const posts = (await getCollection("blogs")).sort(sortItemsByDateDesc);
  const postCount = posts.length;
  return posts.map((post, index) => ({
    // file ini bernama [id].astro → pakai post.id
    params: { id: post.id },
    props: {
      post,
      prevPost: index + 1 !== postCount ? posts[index + 1] : null,
      nextPost: index !== 0 ? posts[index - 1] : null,
    },
  }));
}

type Props = {
  post: CollectionEntry<"blogs">;
  prevPost: CollectionEntry<"blogs"> | null;
  nextPost: CollectionEntry<"blogs"> | null;
};

const { post, prevPost, nextPost } = Astro.props as Props;
const { title, pubDate, author, tags = [], image, updatedAt, description } = post.data;
const { Content } = await render(post);

// ===== SEO =====
const siteBase = Astro.site ?? siteConfig.website;
const canonicalPath = withBase(`/blog/${post.id}`); // konsisten dengan [id].astro
const canonicalUrl = new URL(canonicalPath, siteBase).href;
const desc =
  description ??
  `${title} — artikel dari Twotworial tentang desain & bisnis furniture.`;

// siapkan JSON-LD BlogPosting
const blogPostingSchema: Record<string, any> = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "mainEntityOfPage": canonicalUrl,
  "url": canonicalUrl,
  "headline": title,
  "name": title,
  "inLanguage": "id-ID",
  "description": desc,
  "author": author ? [{ "@type": "Person", "name": author }] : undefined,
  "publisher": {
    "@type": "Organization",
    "name": siteConfig.title,
    "logo": { "@type": "ImageObject", "url": new URL(withBase("/TwotworialSQ.webp"), siteBase).href }
  },
  "datePublished": pubDate ? new Date(pubDate).toISOString() : undefined,
  "dateModified":
