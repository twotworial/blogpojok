---
// src/components/Nav.astro  (FULL REPLACE)
import siteConfig from "../site.config";
import Hamburger from "./Hamburger.astro";
import ThemeSwitcher from "./ThemeSwitcher.astro";
import SiteIdentity from "./SiteIdentity.astro";
import { withBase } from "../utils/helpers";

const { activePage } = Astro.props;
---

<header>
  <nav class="w-full">
    <a href={withBase("/")}><SiteIdentity /></a>

    <!-- desktop links -->
    <div class="hidden sm:flex sm:gap-8">
      {siteConfig.headerNavLinks?.map((l) => (
        <a
          href={l.href}
          class:list={[
            "hover:underline",
            activePage === l.activeKey ? "font-semibold" : "font-normal",
          ]}
          >{l.text}</a
        >
      ))}
    </div>

    <ThemeSwitcher />
    <Hamburger />
  </nav>

  <!-- Backdrop (mobile only) -->
  <div id="menu-backdrop" class="fixed inset-0 z-40 hidden bg-black/35 dark:bg-black/50"></div>

  <!-- Floating card panel -->
  <div
    id="mobile-menu"
    class="mobile-card hidden fixed z-50 w-[min(92vw,380px)] rounded-2xl border bg-white p-4 shadow-2xl dark:border-white/15 dark:bg-black"
    role="dialog"
    aria-label="Menu"
    aria-modal="true"
  >
    <div class="mb-2 flex items-center justify-between">
      <h2 class="text-base font-semibold">Menu</h2>
      <button id="menu-close" class="rounded-full px-2 py-1 text-xl leading-none" aria-label="Tutup">Ã—</button>
    </div>

    <div class="mb-3 h-px w-full bg-black/10 dark:bg-white/15"></div>

    <nav class="flex flex-col gap-2">
      {siteConfig.headerNavLinks?.map((l) => (
        <a
          href={l.href}
          class:list={[
            "block rounded-xl px-3 py-2 hover:bg-black/5 dark:hover:bg-white/10",
            activePage === l.activeKey ? "font-semibold" : "font-normal",
          ]}
          >{l.text}</a
        >
      ))}
    </nav>
  </div>
</header>

<style>
  header { position: sticky; top: calc(env(safe-area-inset-top,0) + 8px); z-index: 50; }
  header > nav {
    display:flex; align-items:center; justify-content:space-between; gap:.5rem;
    border-radius:2rem; padding:.5rem 1.25rem;
    backdrop-filter: blur(24px);
    background: color-mix(in oklab, var(--color-paper, #fff) 75%, transparent);
    box-shadow:
      inset 0 0 0.5px 1px hsla(0,0%,0%,0.05),
      0 0 0 1px hsla(0,0%,0%,0.05),
      0 .3px .4px hsla(0,0%,0%,0.02),
      0 .9px 1.5px hsla(0,0%,0%,0.045),
      0 3.5px 6px hsla(0,0%,0%,0.09);
  }
  html.dark header > nav {
    background: color-mix(in oklab, var(--color-paper-inv, #0c0c0c) 70%, transparent);
  }

  /* posisi panel mengambang: di bawah bar, kanan */
  .mobile-card {
    right: 1rem;
    top: calc(env(safe-area-inset-top,0) + 64px);
  }

  @media (min-width: 640px){
    #menu-backdrop, #mobile-menu { display:none !important; }
  }
</style>

<script is:inline>
  (function () {
    const openBtn = document.querySelector("#hamburger-menu");
    const closeBtn = document.querySelector("#menu-close");
    const panel = document.querySelector("#mobile-menu");
    const backdrop = document.querySelector("#menu-backdrop");

    if (!openBtn || !panel || !backdrop) return;

    const open = () => {
      panel.classList.remove("hidden");
      backdrop.classList.remove("hidden");
      document.body.style.overflow = "hidden";
      openBtn.setAttribute("aria-expanded", "true");
      // fokus pertama
      const first = panel.querySelector("a,button"); first && first.focus?.();
    };

    const close = () => {
      panel.classList.add("hidden");
      backdrop.classList.add("hidden");
      document.body.style.overflow = "";
      openBtn.setAttribute("aria-expanded", "false");
      openBtn.focus?.();
    };

    openBtn.addEventListener("click", (e) => {
      e.preventDefault();
      const isOpen = !panel.classList.contains("hidden");
      isOpen ? close() : open();
    });
    closeBtn?.addEventListener("click", close);
    backdrop.addEventListener("click", close);
    document.addEventListener("keydown", (e) => { if (e.key === "Escape") close(); });
  })();
</script>
