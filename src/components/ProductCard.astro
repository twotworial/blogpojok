---
/** ProductCard.astro
 * Menampilkan ringkas produk untuk halaman listing.
 * Prop `product` = CollectionEntry<"products">
 */
import type { CollectionEntry } from "astro:content";
type Props = { product: CollectionEntry<"products"> };
const { product } = Astro.props as Props;
const p = product.data;

const href = `/products/${product.slug ?? product.id}/`;
const firstImg = p.images?.[0];
const priceText = new Intl.NumberFormat("id-ID", {
  style: "currency",
  currency: p.currency ?? "IDR",
  maximumFractionDigits: 0,
}).format(p.price);
---

<article class="rounded-3xl border p-4 transition hover:shadow-sm bg-[var(--color-paper)] dark:bg-[var(--color-paper-inv)]">
  <a href={href} class="block">
    {firstImg && (
      <img
        src={firstImg.src}
        alt={firstImg.alt ?? p.title}
        width="800"
        height="600"
        loading="lazy"
        decoding="async"
        class="mb-3 h-auto w-full rounded-2xl object-cover"
      />
    )}
    <h3 class="mb-1 text-lg font-semibold">{p.title}</h3>
    {p.excerpt && <p class="meta opacity-80">{p.excerpt}</p>}
  </a>

  <div class="mt-3 flex items-center justify-between">
    <div class="text-base font-semibold">{priceText}</div>
    <div class="flex gap-1">
      {p.availability === "InStock" && <span class="meta rounded-full border px-2 py-0.5">Ready</span>}
      {p.availability === "PreOrder" && <span class="meta rounded-full border px-2 py-0.5">PO</span>}
      {p.availability === "OutOfStock" && <span class="meta rounded-full border px-2 py-0.5">Habis</span>}
    </div>
  </div>

  <div class="mt-3 flex gap-2">
    <a href={href} class="button-link space-btn-outlined">Detail</a>
    {p.url && (
      <a href={p.url} target="_blank" rel="noopener" class="button-link space-btn-filled">
        Beli / Hubungi
      </a>
    )}
  </div>
</article>
