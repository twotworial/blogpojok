---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import { withBase } from "../utils/helpers";

type Props = {
  post: CollectionEntry<"blogs">;
};

const { post } = Astro.props as Props;
const { title, pubDate, description, image } = post.data;

type ResolvedImg =
  | { kind: "asset"; src: any; alt: string }
  | { kind: "external"; src: string; alt: string };

function resolveImage(img: unknown, fallbackAlt: string): ResolvedImg | null {
  if (!img) return null;

  // Case A: ImageMetadata dari image() â†’ ada properti "src", "width", dll.
  if (typeof img === "object" && img !== null && "src" in (img as any) && "width" in (img as any)) {
    const meta = img as any;
    const alt = meta.alt ?? fallbackAlt;
    return { kind: "asset", src: meta, alt };
  }

  // Case B: Objek { url, alt }, url bisa string atau ImageMetadata
  if (typeof img === "object" && img !== null && "url" in (img as any)) {
    const obj = img as any;
    const alt = obj.alt ?? fallbackAlt;

    // url berupa ImageMetadata
    if (obj.url && typeof obj.url === "object" && "src" in obj.url && "width" in obj.url) {
      return { kind: "asset", src: obj.url, alt };
    }
    // url berupa string (http/https)
    if (typeof obj.url === "string") {
      return { kind: "external", src: obj.url, alt };
    }
  }

  // Case C: string murni (harusnya URL http/https)
  if (typeof img === "string") {
    return { kind: "external", src: img, alt: fallbackAlt };
  }

  return null;
}

const cover = resolveImage(image, title);
const href = withBase(`/blog/${post.id}`);
---

<article class="rounded-3xl border p-4 sm:p-6 shadow-sm">
  {cover && cover.kind === "asset" && (
    <a href={href} class="block overflow-hidden rounded-2xl">
      <Image
        src={cover.src}
        alt={cover.alt}
        loading="lazy"
        decoding="async"
        class="h-auto w-full"
        sizes="(max-width: 768px) 100vw, 768px"
      />
    </a>
  )}
  {cover && cover.kind === "external" && (
    <a href={href} class="block overflow-hidden rounded-2xl">
      <img
        src={cover.src}
        alt={cover.alt}
        loading="lazy"
        decoding="async"
        class="h-auto w-full"
        referrerpolicy="no-referrer"
      />
    </a>
  )}

  <h3 class="sigmar-ff mt-4 text-balance">
    <a href={href}>{title}</a>
  </h3>

  <p class="text-sm opacity-70">
    {new Date(pubDate).toLocaleDateString("id-ID", {
      day: "2-digit",
      month: "long",
      year: "numeric",
    })}
  </p>

  {description && <p class="mt-2 line-clamp-3">{description}</p>}
</article>
