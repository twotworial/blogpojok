---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import { withBase } from "../utils/helpers";

type Props = {
  post: CollectionEntry<"blogs">;
};

const { post } = Astro.props as Props;
const { title, pubDate, description, image } = post.data;

type ResolvedImg =
  | { kind: "asset"; src: any; alt: string }
  | { kind: "external"; src: string; alt: string };

function resolveImage(img: unknown, fallbackAlt: string): ResolvedImg | null {
  if (!img) return null;

  // ImageMetadata (hasil schema image())
  if (typeof img === "object" && img !== null && "src" in (img as any) && "width" in (img as any)) {
    const meta = img as any;
    const alt = meta.alt ?? fallbackAlt;
    return { kind: "asset", src: meta, alt };
  }

  // { url, alt } (url bisa ImageMetadata atau string)
  if (typeof img === "object" && img !== null && "url" in (img as any)) {
    const obj = img as any;
    const alt = obj.alt ?? fallbackAlt;
    if (obj.url && typeof obj.url === "object" && "src" in obj.url && "width" in obj.url) {
      return { kind: "asset", src: obj.url, alt };
    }
    if (typeof obj.url === "string") {
      return { kind: "external", src: obj.url, alt };
    }
  }

  if (typeof img === "string") {
    return { kind: "external", src: img, alt: fallbackAlt };
  }
  return null;
}

const cover = resolveImage(image, title);
const href = withBase(`/blog/${post.id}`);
---

<article class="rounded-3xl border shadow-sm overflow-hidden bg-white/70 dark:bg-black/30">
  <!-- Gambar 16:9 -->
  {cover && cover.kind === "asset" && (
    <a href={href} class="block relative w-full pt-[56.25%]"> {/* 16:9 */}
      <Image
        src={cover.src}
        alt={cover.alt}
        loading="lazy"
        decoding="async"
        class="absolute inset-0 h-full w-full object-cover"
        sizes="(max-width: 768px) 100vw, 600px"
      />
    </a>
  )}
  {cover && cover.kind === "external" && (
    <a href={href} class="block relative w-full pt-[56.25%]"> {/* 16:9 */}
      <img
        src={cover.src}
        alt={cover.alt}
        loading="lazy"
        decoding="async"
        referrerpolicy="no-referrer"
        class="absolute inset-0 h-full w-full object-cover"
      />
    </a>
  )}

  <!-- Isi -->
  <div class="p-4 sm:p-6">
    <h3 class="sigmar-ff text-balance text-xl sm:text-2xl">
      <a href={href}>{title}</a>
    </h3>

    <p class="mt-1 text-sm opacity-70">
      {new Date(pubDate).toLocaleDateString("id-ID", {
        day: "2-digit",
        month: "long",
        year: "numeric",
      })}
    </p>

    {description && <p class="mt-3 line-clamp-3">{description}</p>}

    <div class="mt-4">
      <a href={href} class="button-link space-btn-outlined px-4 py-1 text-sm">Baca selengkapnya</a>
    </div>
  </div>
</article>
