---
/* src/components/PostCardPreview.astro */
import type { CollectionEntry } from "astro:content";
import { withBase } from "../utils/helpers";
import siteConfig from "../site.config";

type Props = { post: CollectionEntry<"blogs"> };
const { post } = Astro.props as Props;

const siteBase = Astro.site?.toString() ?? siteConfig.website;
const isHttp = (s: string) => /^https?:\/\//i.test(s);
const abs = (u?: string) =>
  u
    ? new URL(
        // jaga2 kalau u relative tanpa leading slash
        u.startsWith("/") || isHttp(u) ? withBase(u) : withBase("/" + u),
        siteBase
      ).href
    : undefined;

const fm = post.data;
const href = withBase(`/blog/${post.id}`);
const dateStr = fm.pubDate
  ? new Date(fm.pubDate as any).toLocaleDateString("id-ID", {
      day: "2-digit",
      month: "long",
      year: "numeric",
    })
  : "";

/** Normalisasi cover image dari 3 kemungkinan bentuk:
 * 1) image() â†’ function yang mengembalikan ImageMetadata
 * 2) object { url: function|string, alt? }
 * 3) string (public path / URL)
 */
let coverSrc: string | undefined;
let coverAlt: string = (fm as any).image?.alt || fm.title || "";

if (typeof fm.image === "function") {
  const meta = await fm.image();            // schema image()
  coverSrc = abs(meta?.src as string);
} else if (fm.image && typeof fm.image === "object" && "url" in fm.image) {
  const urlVal = (fm.image as any).url;
  if (typeof urlVal === "function") {
    const meta = await urlVal();            // image().url sebagai function
    coverSrc = abs(meta?.src as string);
  } else if (typeof urlVal === "string") {
    coverSrc = abs(urlVal);                 // object.url string
  }
} else if (typeof fm.image === "string") {
  coverSrc = abs(fm.image);                 // string murni
}
---

<article class="rounded-3xl border border-black/10 bg-white/70 p-4 shadow-sm backdrop-blur-md dark:border-white/10 dark:bg-black/30">
  <a href={href} class="block overflow-hidden rounded-2xl">
    {coverSrc && (
      <img
        src={coverSrc}
        alt={coverAlt}
        loading="lazy"
        decoding="async"
        class="h-auto w-full object-cover"
      />
    )}
  </a>

  <header class="mt-4">
    <h3 class="text-balance text-xl font-extrabold">
      <a href={href} class="hover:underline">{fm.title}</a>
    </h3>
    {dateStr && (
      <p class="mt-1 text-sm opacity-70">{dateStr}</p>
    )}
  </header>

  {fm.description && (
    <p class="mt-3 text-sm opacity-90">{fm.description}</p>
  )}
</article>
