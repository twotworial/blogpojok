---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import { withBase } from "../utils/helpers";

type Props = { post: CollectionEntry<"blogs"> };
const { post } = Astro.props as Props;

const { title, pubDate, description, image } = post.data;
const href = withBase(`/blog/${post.id}`);

type ResolvedImg =
  | { kind: "asset"; src: any; alt: string }
  | { kind: "external"; src: string; alt: string };

function resolveImage(img: unknown, fallbackAlt: string): ResolvedImg | null {
  if (!img) return null;

  // A) ImageMetadata dari schema image()
  if (typeof img === "object" && img && "src" in (img as any) && "width" in (img as any)) {
    const meta = img as any;
    return { kind: "asset", src: meta, alt: meta.alt ?? fallbackAlt };
  }

  // B) { url, alt }
  if (typeof img === "object" && img && "url" in (img as any)) {
    const obj = img as any;
    const alt = obj.alt ?? fallbackAlt;
    if (obj.url && typeof obj.url === "object" && "src" in obj.url && "width" in obj.url) {
      return { kind: "asset", src: obj.url, alt };
    }
    if (typeof obj.url === "string") return { kind: "external", src: obj.url, alt };
  }

  // C) string URL
  if (typeof img === "string") return { kind: "external", src: img, alt: fallbackAlt };

  return null;
}

const cover = resolveImage(image, title);
const formattedDate = new Date(pubDate).toLocaleDateString("id-ID", {
  day: "2-digit",
  month: "long",
  year: "numeric",
});
---

<!-- CARD: gambar kiri (kotak 1:1), teks kanan. Di mobile akan stack. -->
<article
  class="group rounded-3xl border p-4 sm:p-5 shadow-sm transition hover:shadow-md bg-white/60 dark:bg-black/30"
>
  <a href={href} class="flex flex-col gap-4 sm:flex-row sm:items-start">
    <!-- THUMBNAIL -->
    <div
      class="relative aspect-square w-full overflow-hidden rounded-2xl border sm:w-40 md:w-48 shrink-0"
    >
      {cover && cover.kind === "asset" && (
        <Image
          src={cover.src}
          alt={cover.alt}
          loading="lazy"
          decoding="async"
          class="h-full w-full object-cover"
          sizes="(max-width: 640px) 100vw, 12rem"
        />
      )}
      {cover && cover.kind === "external" && (
        <img
          src={cover.src}
          alt={cover.alt}
          loading="lazy"
          decoding="async"
          referrerpolicy="no-referrer"
          class="h-full w-full object-cover"
        />
      )}
      {!cover && (
        <div
          class="absolute inset-0 grid place-items-center text-sm opacity-60"
          aria-hidden="true"
        >
          No Image
        </div>
      )}
    </div>

    <!-- META + TEKS -->
    <div class="min-w-0 grow">
      <h3
        class="sigmar-ff text-balance text-xl sm:text-2xl leading-snug group-hover:underline"
      >
        {title}
      </h3>

      <p class="mt-1 text-sm opacity-70">{formattedDate}</p>

      {description && (
        <p class="mt-3 line-clamp-3 text-sm sm:text-base opacity-90">
          {description}
        </p>
      )}

      <span
        class="mt-4 inline-flex items-center gap-2 text-sm font-medium underline decoration-dotted underline-offset-4 opacity-90"
      >
        Baca selengkapnya
        <svg
          class="h-4 w-4"
          viewBox="0 0 24 24"
          fill="currentColor"
          aria-hidden="true"
        >
          <path
            d="M13.172 12 8.586 7.414 10 6l6 6-6 6-1.414-1.414L13.172 12z"
          />
        </svg>
      </span>
    </div>
  </a>
</article>
